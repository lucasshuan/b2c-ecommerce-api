type AuthPayload {
  token: String
  user: User
}

input SignInInput {
  email: String!
  password: String!
}

input ResetPasswordInput {
  token: String!
  password: String!
  confirmPassword: String!
}

input ChangePasswordInput {
  oldPassword: String!
  newPassword: String!
  confirmPassword: String!
}

extend type Query {
  signIn(input: SignInInput!): AuthPayload
  signInWithGoogle(token: String!): AuthPayload

  signOut: Boolean!

  refreshToken(token: String!): AuthPayload @isUser
}

extend type Mutation {
  signUp(input: CreateUserInput!): User
  signUpWithGoogle(token: String!): User

  verifyEmail(token: String!): User
  resendEmailVerification(email: String!): Boolean!
  forgotPassword(email: String!): Boolean!
  resetPassword(input: ResetPasswordInput!): Boolean!

  changePassword(input: ChangePasswordInput!): Boolean! @isUser
}
