type Cart {
  id: ID!
  isActive: Boolean!
  value: Float!
  user: User!
  userId: ID
  order: Order
  products: [CartProduct!]
  createdAt: Time!
  updatedAt: Time!
}

type CartProduct {
  id: ID!
  quantity: Int!
  product: Product!
}

input CreateCartInput {
  isActive: Boolean!
  value: Float!
  userId: ID!
}

input AddProductToCartInput {
  cartId: ID!
  productId: ID!
  quantity: Int!
}

extend type Query {
  getCart(id: ID!): Cart
  listCarts(userID: ID!): [Cart]
}

extend type Mutation {
  createCart(input: CreateCartInput!): Cart
  addProductToCart(input: AddProductToCartInput!): CartProduct
  removeProductFromCart(cartProductID: ID!): Cart
}
